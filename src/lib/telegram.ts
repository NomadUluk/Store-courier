import TelegramBot from 'node-telegram-bot-api'
import type { OrderWithDetails } from '@/types'

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN!, { 
  polling: false,
  request: {
    timeout: 5000 // 5 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
  }
})

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª–∏–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è
function checkMessageLength(message: string, keyboard?: any): boolean {
  const messageLength = message.length
  const keyboardLength = keyboard ? JSON.stringify(keyboard).length : 0
  const totalLength = messageLength + keyboardLength
  
  console.log(`Telegram: –î–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: ${messageLength} —Å–∏–º–≤–æ–ª–æ–≤`)
  console.log(`Telegram: –î–ª–∏–Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: ${keyboardLength} —Å–∏–º–≤–æ–ª–æ–≤`)
  console.log(`Telegram: –û–±—â–∞—è –¥–ª–∏–Ω–∞: ${totalLength} —Å–∏–º–≤–æ–ª–æ–≤`)
  
  if (totalLength > 4096) {
    console.warn('‚ö†Ô∏è Telegram: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç 4096 —Å–∏–º–≤–æ–ª–æ–≤!')
    return false
  }
  
  return true
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ
export async function sendNewOrderNotification(order: OrderWithDetails) {
  try {
    console.log('Telegram: –ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ:', order.id)
    const chatId = process.env.TELEGRAM_CHAT_ID!
    
    console.log('Telegram: Chat ID:', chatId)
    console.log('Telegram: Bot Token –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', !!process.env.TELEGRAM_BOT_TOKEN)
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = `üÜï *–ù–æ–≤—ã–π –∑–∞–∫–∞–∑!*
    
üìã *–ó–∞–∫–∞–∑ #${order.id.slice(-8)}*
üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}
üí∞ *–°—É–º–º–∞:* ${order.orderItems.reduce((sum, item) => sum + Number(item.price) * item.amount, 0).toFixed(2)} —Å–æ–º
üìÖ *–î–∞—Ç–∞:* ${new Date(order.createdAt).toLocaleString('ru-RU')}

${order.customerComment ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${order.customerComment}` : ''}

*–¢–æ–≤–∞—Ä—ã:*
${order.orderItems.map(item => 
  `‚Ä¢ ${item.product.name} (${item.amount} —à—Ç.) - ${(Number(item.price) * item.amount).toFixed(2)} —Å–æ–º`
).join('\n')}`

    console.log('Telegram: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ...')
    
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    const keyboard = {
      inline_keyboard: [
        [
          {
            text: 'üìã –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑',
            url: `https://google.com`
          }
        ]
      ]
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
    if (!checkMessageLength(message, keyboard)) {
      console.warn('Telegram: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ –∏–∑-–∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞')
      const sendMessagePromise = bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown'
      })
      
      const timeoutPromise = new Promise((_, reject) => {
        setTimeout(() => reject(new Error('Telegram API timeout')), 10000)
      })
      
      await Promise.race([sendMessagePromise, timeoutPromise])
      return
    }
    
    // –°–æ–∑–¥–∞–µ–º Promise —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    const sendMessagePromise = bot.sendMessage(chatId, message, {
      parse_mode: 'Markdown',
      reply_markup: keyboard
    })
    
    const timeoutPromise = new Promise((_, reject) => {
      setTimeout(() => reject(new Error('Telegram API timeout')), 10000) // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    })
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    await Promise.race([sendMessagePromise, timeoutPromise])

    console.log('Telegram: –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ –¥–ª—è –∑–∞–∫–∞–∑–∞:', order.id)
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:', error)
    
    // –ù–µ –ø—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–∞–ª—å—à–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
    // –ü—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
    if (error instanceof Error) {
      if (error.message.includes('timeout')) {
        console.log('Telegram: –¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
      } else if (error.message.includes('ETELEGRAM')) {
        console.log('Telegram: –û—à–∏–±–∫–∞ API Telegram')
      }
    }
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
export async function sendOrderStatusUpdateNotification(order: OrderWithDetails, oldStatus: string) {
  try {
    const chatId = process.env.TELEGRAM_CHAT_ID!
    
    const statusLabels = {
      'CREATED': '–°–æ–∑–¥–∞–Ω',
      'COURIER_WAIT': '–û–∂–∏–¥–∞–µ—Ç –∫—É—Ä—å–µ—Ä–∞',
      'COURIER_PICKED': '–ü—Ä–∏–Ω—è—Ç –∫—É—Ä—å–µ—Ä–æ–º',
      'ENROUTE': '–í –ø—É—Ç–∏',
      'DELIVERED': '–î–æ—Å—Ç–∞–≤–ª–µ–Ω',
      'CANCELED': '–û—Ç–º–µ–Ω–µ–Ω'
    }

    // –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è –∑–∞–∫–∞–∑–∞ –∫—É—Ä—å–µ—Ä–æ–º
    if (oldStatus === 'COURIER_WAIT' && order.status === 'COURIER_PICKED') {
      const message = `‚úÖ *–í—ã –≤–∑—è–ª–∏ –∑–∞–∫–∞–∑ #${order.id.slice(-8)}*

üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}
üë§ *–ö–ª–∏–µ–Ω—Ç:* ${order.customerName}
üìû *–¢–µ–ª–µ—Ñ–æ–Ω:* ${order.customerPhone}

${order.customerComment ? `üí¨ *–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:* ${order.customerComment}` : ''}

üöö *–ö—É—Ä—å–µ—Ä:* ${order.courier ? order.courier.fullname : '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω'}`
      
      // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
      const keyboard = {
        inline_keyboard: [
          [
            {
              text: 'üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã',
              url: 'https://google.com'
            }
          ]
        ]
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
      if (!checkMessageLength(message, keyboard)) {
        console.warn('Telegram: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –∫–Ω–æ–ø–∫–∏ –∏–∑-–∑–∞ –ø—Ä–µ–≤—ã—à–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞')
        await bot.sendMessage(chatId, message, {
          parse_mode: 'Markdown'
        })
        return
      }
      
      await bot.sendMessage(chatId, message, {
        parse_mode: 'Markdown',
        reply_markup: keyboard
      })
      return
    }

    const message = `üîÑ *–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ #${order.id.slice(-8)}*

–°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: *${statusLabels[oldStatus as keyof typeof statusLabels]}* ‚Üí *${statusLabels[order.status as keyof typeof statusLabels]}*

üìç *–ê–¥—Ä–µ—Å:* ${order.deliveryAddress}

${order.courier ? `üöö *–ö—É—Ä—å–µ—Ä:* ${order.courier.fullname}` : ''}`

    await bot.sendMessage(chatId, message, {
      parse_mode: 'Markdown'
    })

    console.log('Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –¥–ª—è –∑–∞–∫–∞–∑–∞:', order.id)
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞:', error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
export async function testTelegramBot() {
  try {
    console.log('Telegram: –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞...')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if (!process.env.TELEGRAM_BOT_TOKEN) {
      throw new Error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è')
    }
    
    if (!process.env.TELEGRAM_CHAT_ID) {
      throw new Error('TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è')
    }

    const chatId = process.env.TELEGRAM_CHAT_ID
    console.log('Telegram: Chat ID:', chatId)
    console.log('Telegram: Bot Token –Ω–∞—Å—Ç—Ä–æ–µ–Ω:', !!process.env.TELEGRAM_BOT_TOKEN)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Chat ID —è–≤–ª—è–µ—Ç—Å—è —á–∏—Å–ª–æ–º
    if (isNaN(Number(chatId))) {
      throw new Error('TELEGRAM_CHAT_ID –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ü–æ–ª—É—á–µ–Ω–æ: ' + chatId)
    }

    console.log('Telegram: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...')
    
    // –°–æ–∑–¥–∞–µ–º Promise —Å —Ç–∞–π–º–∞—É—Ç–æ–º –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    const sendMessagePromise = bot.sendMessage(chatId, 'ü§ñ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã.')
    
    const timeoutPromise = new Promise((_, reject) => {
      setTimeout(() => reject(new Error('Telegram API timeout')), 10000) // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    })
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–∞–π–º–∞—É—Ç–æ–º
    await Promise.race([sendMessagePromise, timeoutPromise])
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram –±–æ—Ç–∞:', error)
    throw error // –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤ API
  }
}
