import TelegramBot from 'node-telegram-bot-api'
import { getTelegramBotToken } from '@/lib/settings'
import { registerCourierInTelegram } from '@/lib/telegram'

let botInstance: TelegramBot | null = null
let isPollingActive = false
let restartAttempts = 0
const MAX_RESTART_ATTEMPTS = 3
let lastRestartTime = 0
const RESTART_COOLDOWN = 30000 // 30 —Å–µ–∫—É–Ω–¥ –º–µ–∂–¥—É –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–º–∏

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
async function checkBotStatus(token: string): Promise<boolean> {
  try {
    const testBot = new TelegramBot(token, { 
      polling: false,
      request: {
        agentOptions: {
          keepAlive: true,
          family: 4 // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º IPv4
        }
      }
    })
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    const timeoutPromise = new Promise((_, reject) => {
      setTimeout(() => reject(new Error('TIMEOUT')), 10000) // 10 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç
    })
    
    const getMePromise = testBot.getMe()
    
    await Promise.race([getMePromise, timeoutPromise])
    return true
  } catch (error: any) {
    console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞:', error.message)
    
    // –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–π–º–∞—É—Ç –∏–ª–∏ —Å–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞, —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –±–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    if (error.message.includes('TIMEOUT') || 
        error.message.includes('ETIMEDOUT') || 
        error.message.includes('ENOTFOUND') ||
        error.message.includes('ECONNREFUSED')) {
      console.log('üåê –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É')
      return true // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å —Å–µ—Ç—å—é
    }
    
    return false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling
export async function startTelegramPolling() {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—Ç—É –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
    const now = Date.now()
    if (now - lastRestartTime < RESTART_COOLDOWN) {
      console.log('‚è≥ –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∏, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...')
      return
    }

    if (restartAttempts >= MAX_RESTART_ATTEMPTS) {
      console.log('üõë –ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞')
      return
    }

    // –°–Ω–∞—á–∞–ª–∞ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    if (botInstance || isPollingActive) {
      console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞...')
      await stopTelegramPolling()
      // –î–∞—ë–º –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
      await new Promise(resolve => setTimeout(resolve, 2000))
    }

    const token = await getTelegramBotToken()
    if (!token) {
      console.log('‚ö†Ô∏è Telegram bot token –Ω–µ –Ω–∞–π–¥–µ–Ω, polling –Ω–µ –∑–∞–ø—É—â–µ–Ω')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º (—Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫)
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞...')
    const isBotAvailable = await checkBotStatus(token)
    if (!isBotAvailable) {
      console.log('‚ùå –ë–æ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ –∑–∞–ø—É—â–µ–Ω –≤ –¥—Ä—É–≥–æ–º –º–µ—Å—Ç–µ')
      restartAttempts++
      lastRestartTime = now
      return
    }

    // Webhook —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–∞ - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ polling
    console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ polling —Ä–µ–∂–∏–º (webhook –æ—Ç–∫–ª—é—á–µ–Ω)')

    console.log('üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling...')

    // –°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —Å–µ—Ç–∏
    botInstance = new TelegramBot(token, { 
      polling: {
        interval: 3000, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è –Ω–∞–≥—Ä—É–∑–∫–∏
        params: {
          timeout: 30, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ç–∞–π–º–∞—É—Ç
          allowed_updates: ['message', 'callback_query'] // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ç–∏–ø—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        }
      },
      request: {
        agentOptions: {
          keepAlive: true,
          family: 4, // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º IPv4
          timeout: 30000 // 30 —Å–µ–∫—É–Ω–¥ —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
        }
      }
    })

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    botInstance.onText(/\/start/, async (msg) => {
      const chatId = msg.chat.id.toString()
      console.log(`üì® /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId} (${msg.from?.first_name})`)

      const welcomeMessage = `
üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!

–ï—Å–ª–∏ –≤—ã –∫—É—Ä—å–µ—Ä, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.
–ó–¥–µ—Å—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–∞—Ö.

üëã –ö–æ—à –∫–µ–ª–∏“£–∏–∑!

–≠–≥–µ—Ä–¥–µ —Å–∏–∑ –∫—É—Ä—å–µ—Ä –±–æ–ª—Å–æ“£—É–∑, —Ç”©–º”©–Ω–¥”©–≥“Ø –±–∞—Å–∫—ã—á—Ç—ã –±–∞—Å—ã–ø, —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–∏“£–∏–∑–¥–∏ –±”©–ª“Ø—à“Ø“£“Ø–∑.
–ë—É–ª –∂–µ—Ä–¥–µ–Ω —Å–∏–∑ –∑–∞–∫–∞–∑–¥–∞—Ä –±–æ—é–Ω—á–∞ –±–∏–ª–¥–∏—Ä–º–µ–ª–µ—Ä–¥–∏ –∞–ª–∞ –∞–ª–∞—Å—ã–∑.`

      const keyboard = {
        keyboard: [
          [
            {
              text: 'üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ / –¢–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–∏–Ω –±”©–ª“Ø—à“Ø“Ø',
              request_contact: true
            }
          ]
        ],
        resize_keyboard: true,
        one_time_keyboard: true
      }

      try {
        await botInstance!.sendMessage(chatId, welcomeMessage, {
          reply_markup: keyboard
        })
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
      }
    })

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    botInstance.onText(/\/help/, async (msg) => {
      const chatId = msg.chat.id.toString()
      console.log(`‚ùì /help –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`)

      const helpMessage = `üÜò –ü–æ–º–æ—â—å / –ñ–∞—Ä–¥–∞–º

üá∑üá∫ –†—É—Å—Å–∫–∏–π:
üîπ /start - –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
üîπ üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º - –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ —Å–∏—Å—Ç–µ–º–µ
üîπ /help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

üá∞üá¨ –ö—ã—Ä–≥—ã–∑—á–∞:
üîπ /start - –ö–∞—Ç—Ç–∞–ª—É—É–Ω—É –±–∞—à—Ç–æ–æ
üîπ üì± –ù–æ–º–µ—Ä –±”©–ª“Ø—à“Ø“Ø - –°–∏—Å—Ç–µ–º–∞–≥–∞ –∫–∞—Ç—Ç–∞–ª—É—É
üîπ /help - –ë—É–ª –∂–∞—Ä–¥–∞–º–¥—ã –∫”©—Ä—Å”©—Ç“Ø“Ø

‚ùì –≠–≥–µ—Ä —Å—É—Ä–æ–æ–ª–æ—Ä—É“£—É–∑ –±–æ–ª—Å–æ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–≥–æ –∫–∞–π—Ä—ã–ª—ã“£—ã–∑.`

      try {
        await botInstance!.sendMessage(chatId, helpMessage)
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø—Ä–∞–≤–∫–∏:', error)
      }
    })

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    botInstance.on('contact', async (msg) => {
      const chatId = msg.chat.id.toString()
      const contact = msg.contact
      
      if (!contact) return

      console.log(`üìû –ö–æ–Ω—Ç–∞–∫—Ç –æ—Ç ${chatId}: ${contact.phone_number}`)

      const result = await registerCourierInTelegram(
        chatId, 
        contact.phone_number
      )

      try {
        await botInstance!.sendMessage(chatId, result.message, {
          reply_markup: {
            remove_keyboard: true
          }
        })
        
        if (result.success) {
          console.log(`‚úÖ –ö—É—Ä—å–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${result.data?.courierName}`)
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–Ω—Ç–∞–∫—Ç:', error)
      }
    })

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    botInstance.on('message', async (msg) => {
      // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã
      if (msg.text && (msg.text.startsWith('/') || msg.contact)) {
        return
      }

      const chatId = msg.chat.id.toString()
      const text = msg.text?.toLowerCase().trim()

      if (!text) return

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ
      const phoneRegex = /[\+]?[0-9\s\-\(\)]{9,15}/
      if (phoneRegex.test(text)) {
        console.log(`üìû –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ç–µ–∫—Å—Ç–µ –æ—Ç ${chatId}: ${text}`)
        
        const result = await registerCourierInTelegram(
          chatId, 
          text
        )

        try {
          await botInstance!.sendMessage(chatId, result.message)
          
          if (result.success) {
            console.log(`‚úÖ –ö—É—Ä—å–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${result.data?.courierName}`)
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–æ–º–µ—Ä:', error)
        }
        return
      }

      // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞
      const unknownMessage = `‚ùì –ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É / –ö–µ—á–∏—Ä–µ—Å–∏–∑, –º–µ–Ω –±—É–ª –±—É–π—Ä—É–∫—Ç—É —Ç“Ø—à“Ø–Ω–±”©–π–º.

–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ / –ö–æ–ª–¥–æ–Ω—É“£—É–∑:
üîπ /start - –î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ / –ö–∞—Ç—Ç–∞–ª—É—É–Ω—É –±–∞—à—Ç–æ–æ
üîπ /help - –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏ / –ñ–∞—Ä–¥–∞–º –∞–ª—É—É

–ò–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ / –ñ–µ —Ç–µ–ª–µ—Ñ–æ–Ω –Ω–æ–º–µ—Ä–∏“£–∏–∑–¥–∏ –±”©–ª“Ø—à“Ø“£“Ø–∑.`

      try {
        await botInstance!.sendMessage(chatId, unknownMessage)
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ:', error)
      }
    })

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—à–∏–±–æ–∫
    botInstance.on('polling_error', (error) => {
      console.error('üî¥ Telegram polling error:', error.message)
      
      // –ï—Å–ª–∏ —ç—Ç–æ —Ç–∞–π–º–∞—É—Ç –∏–ª–∏ —Å–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞, –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
      if (error.message.includes('ETIMEDOUT') || 
          error.message.includes('ENOTFOUND') ||
          error.message.includes('ECONNREFUSED') ||
          error.message.includes('EFATAL')) {
        console.log('üåê –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ - –Ω–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞')
        return
      }
      
      // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–Ω—Ñ–ª–∏–∫—Ç 409, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å –∑–∞—â–∏—Ç–æ–π
      if (error.message.includes('409') || error.message.includes('Conflict')) {
        console.log('üîÑ –û–±–Ω–∞—Ä—É–∂–µ–Ω –∫–æ–Ω—Ñ–ª–∏–∫—Ç 409, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –±–æ—Ç–∞...')
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—â–∏—Ç—É –æ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ —Ü–∏–∫–ª–∞
        const now = Date.now()
        if (now - lastRestartTime < RESTART_COOLDOWN || restartAttempts >= MAX_RESTART_ATTEMPTS) {
          console.log('‚è≥ –°–ª–∏—à–∫–æ–º —á–∞—Å—Ç—ã–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∏ –∏–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...')
          return
        }
        
        restartAttempts++
        lastRestartTime = now
        
        setTimeout(async () => {
          await stopTelegramPolling()
          await new Promise(resolve => setTimeout(resolve, 5000)) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
          await startTelegramPolling()
        }, 2000)
      }
    })

    botInstance.on('error', (error) => {
      console.error('üî¥ Telegram bot error:', error)
    })

    isPollingActive = true
    restartAttempts = 0 // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –∑–∞–ø—É—Å–∫–µ
    console.log('‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω –≤ —Ä–µ–∂–∏–º–µ polling')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ Telegram polling:', error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ polling
export async function stopTelegramPolling() {
  try {
    if (botInstance) {
      console.log('üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Telegram polling...')
      
      try {
        // –î–ª—è node-telegram-bot-api polling –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ null
        // –ü—Ä–æ—Å—Ç–æ –æ—á–∏—â–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
      } catch (error) {
        console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ polling (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ):', error)
      }
      
      // –û—á–∏—â–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä
      botInstance = null
      isPollingActive = false
      
      console.log('‚úÖ Telegram polling —É—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    } else {
      isPollingActive = false
      console.log('‚ÑπÔ∏è Telegram polling —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ Telegram polling:', error)
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    botInstance = null
    isPollingActive = false
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞
export async function forceStopAllBots() {
  try {
    console.log('üõë –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤ –±–æ—Ç–∞...')
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä
    await stopTelegramPolling()
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    console.log('‚úÖ –í—Å–µ —ç–∫–∑–µ–º–ø–ª—è—Ä—ã –±–æ—Ç–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏:', error)
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
export function isTelegramPollingActive(): boolean {
  return isPollingActive
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
export function resetRestartCounters() {
  restartAttempts = 0
  lastRestartTime = 0
  console.log('üîÑ –°—á–µ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–±—Ä–æ—à–µ–Ω—ã')
}
