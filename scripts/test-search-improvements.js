/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–ª—É—á—à–µ–Ω–∏–π –ø–æ–∏—Å–∫–∞ –Ω–æ–º–µ—Ä–æ–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
 */

const BASE_URL = 'http://localhost:3000'

async function testSearchImprovements() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π –ø–æ–∏—Å–∫–∞...\n')

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...')
    try {
      const response = await fetch(`${BASE_URL}/api/courier/orders/recent`)
      const data = await response.json()
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–∫–∞–∑–æ–≤:', data.data?.length || 0)
    } catch (error) {
      console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω:', error.message)
      console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: npm run dev')
      return
    }

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–æ–≤
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–æ–º–µ—Ä–æ–≤...')
    
    const testPhones = [
      '+996555123456',
      '+996 555 123 456',
      '+996-555-123-456',
      '996555123456',
      '555123456',
      '555 123 456',
      '555-123-456'
    ]
    
    testPhones.forEach(phone => {
      const normalized = phone.replace(/\D/g, '')
      console.log(`   üìû "${phone}" ‚Üí "${normalized}"`)
    })

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–∏—Å–∫–∞...')
    
    const testPhone = '+996555123456'
    const variants = [
      '996555123456', // –ü–æ–ª–Ω—ã–π –Ω–æ–º–µ—Ä
      '555123456',    // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 9 —Ü–∏—Ñ—Ä
      '996555123456', // –° –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã
      '+996555123456' // –° –ø–ª—é—Å–æ–º
    ]
    
    console.log(`   üìû –î–ª—è –Ω–æ–º–µ—Ä–∞ "${testPhone}" –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–∏—Å–∫–∞:`)
    variants.forEach(variant => {
      console.log(`      ‚Ä¢ "${variant}"`)
    })

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤...')
    
    const searchQueries = [
      '555123456',      // –¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã
      '+996555123456',  // –° –∫–æ–¥–æ–º —Å—Ç—Ä–∞–Ω—ã
      '555 123 456',    // –° –ø—Ä–æ–±–µ–ª–∞–º–∏
      '555-123-456',    // –° –¥–µ—Ñ–∏—Å–∞–º–∏
      '996555123456',   // –ë–µ–∑ –ø–ª—é—Å–∞
      '555',            // –ß–∞—Å—Ç–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä
      '123456'          // –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ü–∏—Ñ—Ä—ã
    ]
    
    searchQueries.forEach(query => {
      const normalized = query.replace(/\D/g, '')
      console.log(`   üîç –ü–æ–∏—Å–∫ "${query}" ‚Üí –Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π "${normalized}"`)
    })

    console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    console.log('\nüìã –û–∂–∏–¥–∞–µ–º—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:')
    console.log('‚úÖ –ü–æ–∏—Å–∫ "+996555 555 555" –Ω–∞–π–¥–µ—Ç –Ω–æ–º–µ—Ä "+996555555555"')
    console.log('‚úÖ –ü–æ–∏—Å–∫ "+996555555555" –Ω–∞–π–¥–µ—Ç –Ω–æ–º–µ—Ä "+996555 555 555"')
    console.log('‚úÖ –ü–æ–∏—Å–∫ "555555555" –Ω–∞–π–¥–µ—Ç –Ω–æ–º–µ—Ä "+996555555555"')
    console.log('‚úÖ –ü–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö (–º–æ–±–∏–ª—å–Ω—ã—Ö –∏ –¥–µ—Å–∫—Ç–æ–ø–Ω—ã—Ö)')
    console.log('‚úÖ –ù–µ—Ç –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ø–æ–ª–µ–π –ø–æ–∏—Å–∫–∞')

    console.log('\nüí° –ü—Ä–∏–º–µ—Ä—ã –ø–æ–∏—Å–∫–∞:')
    console.log('‚Ä¢ –í–≤–µ–¥–∏—Ç–µ: "+996555555555" ‚Üí –Ω–∞–π–¥–µ—Ç "+996555 555 555"')
    console.log('‚Ä¢ –í–≤–µ–¥–∏—Ç–µ: "555555555" ‚Üí –Ω–∞–π–¥–µ—Ç "+996555555555"')
    console.log('‚Ä¢ –í–≤–µ–¥–∏—Ç–µ: "555 555 555" ‚Üí –Ω–∞–π–¥–µ—Ç "+996555555555"')
    console.log('‚Ä¢ –í–≤–µ–¥–∏—Ç–µ: "555-555-555" ‚Üí –Ω–∞–π–¥–µ—Ç "+996555555555"')

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testSearchImprovements()
