const TelegramBot = require('node-telegram-bot-api')
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkBotToken() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞ Telegram –±–æ—Ç–∞...')

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    const tokenSetting = await prisma.setting.findUnique({
      where: { key: 'COURIER_BOT_TOKEN' }
    })

    if (!tokenSetting || !tokenSetting.value) {
      console.log('‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö')
      return
    }

    console.log('üìã –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω:', tokenSetting.value.slice(0, 10) + '...')

    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    const bot = new TelegramBot(tokenSetting.value, { polling: false })

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º getMe
    console.log('üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Telegram API...')
    
    try {
      const botInfo = await bot.getMe()
      console.log('‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!')
      console.log('ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ:')
      console.log(`   - ID: ${botInfo.id}`)
      console.log(`   - –ò–º—è: ${botInfo.first_name}`)
      console.log(`   - Username: @${botInfo.username}`)
      console.log(`   - –ú–æ–∂–µ—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—å—Å—è –∫ –≥—Ä—É–ø–ø–∞–º: ${botInfo.can_join_groups}`)
      console.log(`   - –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è: ${botInfo.can_read_all_group_messages}`)
      
      console.log('\nüéâ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.')
      console.log(`üí° –ù–∞–π–¥–∏—Ç–µ –±–æ—Ç–∞ –≤ Telegram: @${botInfo.username}`)
      
    } catch (apiError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API:', apiError.message)
      
      if (apiError.message.includes('401')) {
        console.log('üîë –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–æ–∫–µ–Ω–æ–º - –æ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –æ—Ç–æ–∑–≤–∞–Ω')
      } else if (apiError.message.includes('network')) {
        console.log('üåê –ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç–µ–≤—ã–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º')
      }
    }

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkBotToken()
