const TelegramBot = require('node-telegram-bot-api')
const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function testBotUpdates() {
  try {
    console.log('üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π...')

    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    const tokenSetting = await prisma.setting.findUnique({
      where: { key: 'TELEGRAM_BOT_TOKEN' }
    })

    if (!tokenSetting) {
      console.log('‚ùå –¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω')
      return
    }

    const bot = new TelegramBot(tokenSetting.value, { polling: false })
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    console.log('üì° –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ...')
    const botInfo = await bot.getMe()
    console.log('ü§ñ –ë–æ—Ç:', botInfo.username)

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    console.log('üì• –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...')
    const updates = await bot.getUpdates()
    
    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: ${updates.length}`)
    
    if (updates.length > 0) {
      console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:')
      updates.slice(-3).forEach((update, index) => {
        console.log(`${index + 1}. Update ID: ${update.update_id}`)
        if (update.message) {
          console.log(`   –°–æ–æ–±—â–µ–Ω–∏–µ: "${update.message.text}"`)
          console.log(`   –û—Ç: ${update.message.from?.first_name}`)
          console.log(`   Chat ID: ${update.message.chat.id}`)
        }
      })
    } else {
      console.log('‚ÑπÔ∏è –ù–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π')
    }

    console.log('\nüí° –ï—Å–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –Ω–µ—Ç:')
    console.log('1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –≤ –±–æ—Ç–∞ @rossatommbot')
    console.log('2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  } finally {
    await prisma.$disconnect()
  }
}

testBotUpdates()
