/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API endpoints
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö Telegram API endpoints
 */

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch (Node.js 18+)

const BASE_URL = 'http://localhost:3000'

async function testApiEndpoints() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoints...\n')

  const endpoints = [
    { name: 'Start Polling', url: '/api/telegram/start-polling', method: 'POST' },
    { name: 'Test Message', url: '/api/telegram/test-message', method: 'POST' },
    { name: 'Simple Test', url: '/api/telegram/simple-test', method: 'POST' },
    { name: 'Force Stop', url: '/api/telegram/force-stop', method: 'POST' }
  ]

  for (const endpoint of endpoints) {
    console.log(`üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ${endpoint.name}`)
    console.log(`   URL: ${endpoint.method} ${endpoint.url}`)
    
    try {
      const options = {
        method: endpoint.method,
        headers: {
          'Content-Type': 'application/json'
        }
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è POST –∑–∞–ø—Ä–æ—Å–æ–≤
      if (endpoint.method === 'POST') {
        if (endpoint.url.includes('test-message')) {
          options.body = JSON.stringify({
            message: 'ü§ñ –¢–µ—Å—Ç API endpoint'
          })
        }
      }
      
      const response = await fetch(`${BASE_URL}${endpoint.url}`, options)
      const data = await response.json()
      
      console.log(`   ‚úÖ –°—Ç–∞—Ç—É—Å: ${response.status}`)
      console.log(`   üìä –û—Ç–≤–µ—Ç:`, data)
      
      if (response.status === 404) {
        console.log(`   ‚ùå –û–®–ò–ë–ö–ê 404: Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω!`)
      } else if (response.status >= 400) {
        console.log(`   ‚ö†Ô∏è –û—à–∏–±–∫–∞ ${response.status}: ${data.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
      } else {
        console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ`)
      }
      
    } catch (error) {
      console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: ${error.message}`)
      
      if (error.message.includes('ECONNREFUSED') || error.message.includes('fetch failed')) {
        console.log(`   üí° –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω! –ó–∞–ø—É—Å—Ç–∏—Ç–µ: npm run dev`)
      }
    }
    
    console.log('') // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
  }

  console.log('üèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testApiEndpoints()
