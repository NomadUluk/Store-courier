/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ Telegram –±–æ—Ç–∞
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–∞—É—Ç–æ–≤ –∏ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤
 */

// –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π fetch (Node.js 18+)

const BASE_URL = 'http://localhost:3000'

async function testBotStability() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ Telegram –±–æ—Ç–∞...\n')

  try {
    // 1. –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    console.log('1Ô∏è‚É£ –°–±—Ä–æ—Å —Å—á–µ—Ç—á–∏–∫–æ–≤ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞...')
    try {
      const resetResponse = await fetch(`${BASE_URL}/api/telegram/force-stop`, {
        method: 'POST'
      })
      const resetData = await resetResponse.json()
      console.log('üîÑ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–±—Ä–æ—Å–∞:', resetData)
    } catch (error) {
      console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω):', error.message)
    }

    // 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook —Å—Ç–∞—Ç—É—Å–∞
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ webhook...')
    try {
      const webhookResponse = await fetch(`${BASE_URL}/api/telegram/check-webhook`)
      const webhookData = await webhookResponse.json()
      console.log('üìä –°—Ç–∞—Ç—É—Å webhook:', webhookData)
    } catch (error) {
      console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω:', error.message)
      console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: npm run dev')
      return
    }

    // 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞...')
    try {
      const startResponse = await fetch(`${BASE_URL}/api/telegram/start-polling`, {
        method: 'POST'
      })
      const startData = await startResponse.json()
      console.log('üöÄ –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—É—Å–∫–∞:', startData)
      
      if (startData.success) {
        console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
      } else if (startData.error.includes('—É–∂–µ –∑–∞–ø—É—â–µ–Ω')) {
        console.log('‚úÖ –ë–æ—Ç —É–∂–µ –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!')
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', startData.error)
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message)
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ (–Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–ø—ã—Ç–æ–∫)
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ (3 –ø–æ–ø—ã—Ç–∫–∏)...')
    for (let i = 1; i <= 3; i++) {
      console.log(`\n   –ü–æ–ø—ã—Ç–∫–∞ ${i}/3:`)
      
      try {
        const testResponse = await fetch(`${BASE_URL}/api/telegram/start-polling`, {
          method: 'POST'
        })
        const testData = await testResponse.json()
        
        if (testData.success) {
          console.log(`   ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ ${i}: –£—Å–ø–µ—à–Ω–æ`)
        } else if (testData.error.includes('—É–∂–µ –∑–∞–ø—É—â–µ–Ω')) {
          console.log(`   ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ ${i}: –ë–æ—Ç —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç`)
        } else {
          console.log(`   ‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ ${i}: ${testData.error}`)
        }
        
        // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏
        await new Promise(resolve => setTimeout(resolve, 2000))
        
      } catch (error) {
        console.log(`   ‚ùå –ü–æ–ø—ã—Ç–∫–∞ ${i}: –û—à–∏–±–∫–∞ - ${error.message}`)
      }
    }

    console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    console.log('\nüìã –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:')
    console.log('‚úÖ –ù–µ—Ç –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞')
    console.log('‚úÖ –ù–µ—Ç ETIMEDOUT –æ—à–∏–±–æ–∫ –≤ –ª–æ–≥–∞—Ö')
    console.log('‚úÖ –ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è —Å—Ç–∞–±–∏–ª—å–Ω–æ')
    console.log('‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç —á–∞—Å—Ç—ã—Ö –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç')

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testBotStability()
