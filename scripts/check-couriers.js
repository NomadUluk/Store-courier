const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function checkCouriers() {
  try {
    console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É—Ä—å–µ—Ä–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ...')

    const couriers = await prisma.user.findMany({
      where: { role: 'COURIER' }
    })

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∫—É—Ä—å–µ—Ä–æ–≤: ${couriers.length}`)
    
    if (couriers.length > 0) {
      console.log('\nüë• –°–ø–∏—Å–æ–∫ –∫—É—Ä—å–µ—Ä–æ–≤:')
      couriers.forEach((courier, index) => {
        console.log(`${index + 1}. ${courier.fullname} - ${courier.phoneNumber} (ID: ${courier.id})`)
      })
    } else {
      console.log('\n‚ùå –ö—É—Ä—å–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ')
      console.log('üí° –î–æ–±–∞–≤—å—Ç–µ –∫—É—Ä—å–µ—Ä–∞ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ:')
      console.log(`
const testCourier = await prisma.user.create({
  data: {
    fullname: '–¢–µ—Å—Ç–æ–≤—ã–π –ö—É—Ä—å–µ—Ä',
    phoneNumber: '+996700123456',
    password: 'password123',
    role: 'COURIER'
  }
})`)
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram
    const telegramSettings = await prisma.setting.findMany({
      where: {
        key: {
          in: ['COURIER_BOT_TOKEN', 'COURIER_CHAT_ID']
        }
      }
    })

    console.log('\nüì± –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram:')
    telegramSettings.forEach(setting => {
      if (setting.key === 'COURIER_BOT_TOKEN') {
        console.log(`  ${setting.key}: ${setting.value ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`)
      } else {
        console.log(`  ${setting.key}: ${setting.value}`)
      }
    })

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkCouriers()
