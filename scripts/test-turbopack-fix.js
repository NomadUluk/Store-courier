/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ Turbopack —Å node-telegram-bot-api
 */

const BASE_URL = 'http://localhost:3000'

async function testTurbopackFix() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏ Turbopack...\n')

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞...')
    try {
      const response = await fetch(`${BASE_URL}/api/telegram/auto-start`)
      const data = await response.json()
      console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω:', data.message)
    } catch (error) {
      console.log('‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω:', error.message)
      console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: npm run dev')
      return
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞
    console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Telegram –±–æ—Ç–∞...')
    try {
      const statusResponse = await fetch(`${BASE_URL}/api/telegram/start-polling`, {
        method: 'POST'
      })
      const statusData = await statusResponse.json()
      console.log('üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞:', statusData)
      
      if (statusData.success) {
        console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
      } else if (statusData.error.includes('—É–∂–µ –∑–∞–ø—É—â–µ–Ω')) {
        console.log('‚úÖ –ë–æ—Ç —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç (–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ)')
      } else {
        console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞:', statusData.error)
      }
    } catch (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error.message)
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É API endpoints
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoints...')
    const endpoints = [
      '/api/telegram/auto-start',
      '/api/telegram/start-polling',
      '/api/telegram/force-stop'
    ]

    for (const endpoint of endpoints) {
      try {
        const response = await fetch(`${BASE_URL}${endpoint}`, {
          method: endpoint.includes('start-polling') ? 'POST' : 'GET'
        })
        const data = await response.json()
        console.log(`   ‚úÖ ${endpoint}: ${response.status} - ${data.message || 'OK'}`)
      } catch (error) {
        console.log(`   ‚ùå ${endpoint}: –û—à–∏–±–∫–∞ - ${error.message}`)
      }
    }

    console.log('\nüèÅ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!')
    console.log('\nüìã –û–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:')
    console.log('‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ "Cannot read properties of undefined (reading \'node\')"')
    console.log('‚úÖ Telegram –±–æ—Ç –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')
    console.log('‚úÖ API endpoints —Ä–∞–±–æ—Ç–∞—é—Ç –±–µ–∑ –æ—à–∏–±–æ–∫')
    console.log('‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –±–µ–∑ –ø—Ä–æ–±–ª–µ–º —Å Turbopack')

    console.log('\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:')
    console.log('‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "npm run dev" –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–µ–∑ Turbopack')
    console.log('‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ "npm run dev:turbo" –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å Turbopack (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)')
    console.log('‚Ä¢ –ü—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö —Å Turbopack –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç–µ—Å—å –Ω–∞ –æ–±—ã—á–Ω—ã–π webpack')

  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error)
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTurbopackFix()
