const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function fixTelegramChatId() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∞ TELEGRAM_CHAT_ID...')

    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    const currentSetting = await prisma.setting.findUnique({
      where: { key: 'TELEGRAM_CHAT_ID' }
    })

    if (!currentSetting) {
      console.log('‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ TELEGRAM_CHAT_ID –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
      return
    }

    console.log('üìã –¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', currentSetting.value)

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω—ã–º JSON
    let isValidJson = false
    try {
      JSON.parse(currentSetting.value)
      isValidJson = true
    } catch (e) {
      isValidJson = false
    }

    if (isValidJson) {
      console.log('‚úÖ –ó–Ω–∞—á–µ–Ω–∏–µ —É–∂–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON')
      return
    }

    // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤ –ø—É—Å—Ç–æ–π JSON –æ–±—ä–µ–∫—Ç
    const newValue = '{}'
    
    await prisma.setting.update({
      where: { key: 'TELEGRAM_CHAT_ID' },
      data: { value: newValue }
    })

    console.log('‚úÖ TELEGRAM_CHAT_ID –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞:', newValue)
    console.log('üí° –¢–µ–ø–µ—Ä—å –∫—É—Ä—å–µ—Ä—ã –º–æ–≥—É—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error)
  } finally {
    await prisma.$disconnect()
  }
}

fixTelegramChatId()
