const fetch = require('node-fetch');

async function testStatisticsAPI() {
  const baseUrl = 'http://localhost:3000';
  
  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–µ—Ä–∏–æ–¥—ã
  const periods = ['today', 'yesterday', 'week', 'month', 'all'];
  
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...\n');
  
  for (const period of periods) {
    try {
      console.log(`üìä –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–∏–æ–¥: ${period}`);
      
      const response = await fetch(`${baseUrl}/api/courier/statistics?period=${period}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          'Cookie': 'auth-token=test-token' // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ç–æ–∫–µ–Ω
        }
      });
      
      const data = await response.json();
      
      if (data.success) {
        const summary = data.data.summary;
        console.log(`‚úÖ ${period}:`);
        console.log(`   - –í—Å–µ–≥–æ –∑–∞–∫–∞–∑–æ–≤: ${summary.totalOrders}`);
        console.log(`   - –î–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: ${summary.completedOrders}`);
        console.log(`   - –í –ø—É—Ç–∏: ${summary.inProgressOrders}`);
        console.log(`   - –û—Ç–º–µ–Ω–µ–Ω–æ: ${summary.canceledOrders}`);
        console.log(`   - –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: ${summary.totalRevenue} —Å–æ–º`);
        console.log('');
      } else {
        console.log(`‚ùå ${period}: –û—à–∏–±–∫–∞ - ${data.error}`);
        console.log('');
      }
    } catch (error) {
      console.log(`‚ùå ${period}: –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ - ${error.message}`);
      console.log('');
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testStatisticsAPI().catch(console.error);
